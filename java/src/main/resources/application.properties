spring.profiles.active=${ENVIRONMENT_NAME:dev}
logging.config=classpath:log4j2.xml
application.headerfield.requestId=x-request-id

# RabbitMq
rabbitmq.host=localhost
rabbitmq.port=5672
rabbitmq.virtualhost=my_vhost
rabbitmq.admin.username=my_server_50ab
rabbitmq.admin.password=AB*!NRMJ9o9lfsO&

management.simple.metrics.export.enabled=true
management.endpoints.jmx.exposure.include=health

# same pw as: rabbitmq.admin.username
# Not necessary for application -
#rabbitmq.tester.username=my_tester_50ab
#rabbitmq.tester.password=AB*!NRMJ9o9lfsO&

# admin:admin
rabbitmq.admin.httpauth=Basic YWRtaW46YWRtaW4=

rabbitmq.exchange.external=my.external.topic
rabbitmq.exchange.internal=my.internal.topic

# dynamic queues
rabbitmq.queue.user.publish.name.pattern=user.publish.queue.%s_%s
rabbitmq.queue.user.publish.rk.pattern=rk_user_publish_queue_%s_%s
rabbitmq.queue.user.receive.name.pattern=user.receive.queue.%s_%s
rabbitmq.queue.user.receive.rk.pattern=rk_user_receive_queue_%s_%s

# management service endpoints
rabbitmq.management.user.create=http://localhost:15672/api/users/
rabbitmq.management.queue.create=http://localhost:15672/api/queues/my_vhost/
rabbitmq.management.binding.create=http://localhost:15672/api/bindings/my_vhost/
rabbitmq.management.vhost.permissions=http://localhost:15672/api/permissions/my_vhost/
rabbitmq.management.vhost.topic.permissions=http://localhost:15672/api/topic-permissions/my_vhost/

# Patterns
rabbitmq.management.public.pattern=^my.external.topic$

# JDBC
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=admin
spring.datasource.password=secret
